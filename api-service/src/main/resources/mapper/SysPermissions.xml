<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.admcc.system.base.dao.SysPermissionsDao">
    <delete id="deleteAllUserRolePermission">
        DELETE FROM sys_role_permission
        WHERE permission_id IN
        <foreach collection="allPermissionIds" item="permissionId" open="(" separator="," close=")">
            #{permissionId}
        </foreach>
    </delete>

    <select id="getUserAllPermissions" resultType="cn.admcc.system.base.entity.SysPermissions">

        WITH RECURSIVE user_perms AS (
            -- 直接分配的权限
            SELECT p.*
            FROM sys_permissions p
                     JOIN sys_role_permission rp ON p.permission_id = rp.permission_id
                     JOIN sys_user_role ur ON ur.sys_role_id = rp.role_id
            WHERE ur.sys_user_id = #{userId}

            UNION

            -- 递归获取所有子权限
            SELECT child.*
            FROM sys_permissions child
                     JOIN user_perms parent ON child.parent_id = parent.permission_id
            WHERE child.is_hidden = false  -- 排除隐藏权限
        )
        SELECT * FROM user_perms
        ORDER BY parent_id NULLS FIRST, sort_order
    </select>
    <select id="getAllPermissionIds" resultType="cn.admcc.system.base.entity.SysPermissions">
        WITH RECURSIVE permission_tree AS (

            SELECT permission_id, parent_id, perm_name
            FROM sys_permissions
            WHERE permission_id = #{permissionId}

            UNION ALL


            SELECT child.permission_id, child.parent_id, child.perm_name
            FROM sys_permissions child
                     INNER JOIN permission_tree parent ON child.parent_id = parent.permission_id
            where allow_delete = 0 -- 0 允许删除
        )
        SELECT permission_id, perm_name
        FROM permission_tree
        WHERE permission_id != #{permissionId}
        ORDER BY permission_id;
    </select>
    <select id="getRolePermission" resultType="cn.admcc.system.base.entity.SysPermissions">
        WITH RECURSIVE permission_tree AS (
            -- 基础查询：获取角色直接关联的权限
            SELECT
                p.permission_id,
                p.perm_key,
                p.perm_name,
                p.perm_type,
                p.parent_id,
                p.component_path,
                p.sort_order,
                p.is_hidden,
                p.created_time,
                p.updated_time,
                p.allow_delete

            FROM sys_permissions p
                     INNER JOIN sys_role_permission rp ON p.permission_id = rp.permission_id
            WHERE rp.role_id = #{roleId}

            UNION ALL

            -- 递归查询：获取所有子权限
            SELECT
                child.permission_id,
                child.perm_key,
                child.perm_name,
                child.perm_type,
                child.parent_id,
                child.component_path,
                child.sort_order,
                child.is_hidden,
                child.created_time,
                child.updated_time,
                child.allow_delete

            FROM sys_permissions child
                     INNER JOIN permission_tree pt ON child.parent_id = pt.permission_id
        )
        SELECT DISTINCT
            permission_id,
            perm_key,
            perm_name,
            perm_type,
            parent_id,
            component_path,
            sort_order,
            is_hidden,
            created_time,
            updated_time,
            allow_delete

        FROM permission_tree
        ORDER BY  sort_order, permission_id;
    </select>
</mapper>