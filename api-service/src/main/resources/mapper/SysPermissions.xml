<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.admcc.system.base.dao.SysPermissionsDao">
    <delete id="deleteAllUserRolePermission">
        DELETE FROM sys_role_permission
        WHERE permission_id IN
        <foreach collection="allPermissionIds" item="permissionId" open="(" separator="," close=")">
            #{permissionId}
        </foreach>
    </delete>

    <select id="getUserAllPermissions" resultType="cn.admcc.system.base.entity.SysPermissions">
        WITH RECURSIVE user_perms AS (

            SELECT
                p.*,
                p.permission_id as leaf_permission_id,
                p.permission_id as current_permission_id,
                0 as level,
                ARRAY[p.permission_id] as path
            FROM sys_permissions p
                     JOIN sys_role_permission rp ON p.permission_id = rp.permission_id
                     JOIN sys_user_role ur ON ur.sys_role_id = rp.role_id
            WHERE ur.sys_user_id = #{userId}

            UNION ALL

            SELECT
                parent.*,
                up.leaf_permission_id,
                parent.permission_id as current_permission_id,
                up.level + 1 as level,
                parent.permission_id || up.path as path
            FROM sys_permissions parent
                     JOIN user_perms up ON parent.permission_id = up.parent_id
            WHERE parent.is_hidden = FALSE

        )
        SELECT DISTINCT ON (permission_id)
            permission_id,
            perm_key,
            perm_name,
            perm_type,
            parent_id,
            component_path,
            sort_order,
            is_hidden,
            created_time,
            updated_time,
            allow_delete,
            level,
            path
        FROM user_perms
        ORDER BY permission_id, level DESC;

    </select>
    <select id="getAllPermissionIds" resultType="cn.admcc.system.base.entity.SysPermissions">
        WITH RECURSIVE permission_tree AS (

            SELECT permission_id, parent_id, perm_name
            FROM sys_permissions
            WHERE permission_id = #{permissionId}

            UNION ALL


            SELECT child.permission_id, child.parent_id, child.perm_name
            FROM sys_permissions child
                     INNER JOIN permission_tree parent ON child.parent_id = parent.permission_id
            where allow_delete = 0 -- 0 允许删除
        )
        SELECT permission_id, perm_name
        FROM permission_tree
        WHERE permission_id != #{permissionId}
        ORDER BY permission_id;
    </select>
    <select id="getRolePermission" resultType="cn.admcc.system.base.entity.SysPermissions">
        WITH RECURSIVE permission_tree AS (
            -- 基础查询：获取角色直接关联的所有权限（叶子节点）
            SELECT
                p.permission_id,
                p.perm_key,
                p.perm_name,
                p.perm_type,
                p.parent_id,
                p.component_path,
                p.sort_order,
                p.is_hidden,
                p.created_time,
                p.updated_time,
                p.allow_delete,
                0 as level  -- 添加层级信息
            FROM sys_permissions p
                     INNER JOIN sys_role_permission rp ON p.permission_id = rp.permission_id
            WHERE rp.role_id = #{roleId}

            UNION ALL

            -- 递归查询：向上查找父权限
            SELECT
                parent.permission_id,
                parent.perm_key,
                parent.perm_name,
                parent.perm_type,
                parent.parent_id,
                parent.component_path,
                parent.sort_order,
                parent.is_hidden,
                parent.created_time,
                parent.updated_time,
                parent.allow_delete,
                pt.level + 1 as level
            FROM sys_permissions parent
                     INNER JOIN permission_tree pt ON parent.permission_id = pt.parent_id
            WHERE parent.is_hidden = FALSE

        )
        SELECT DISTINCT
            permission_id,
            perm_key,
            perm_name,
            perm_type,
            parent_id,
            component_path,
            sort_order,
            is_hidden,
            created_time,
            updated_time,
            allow_delete
        FROM permission_tree
        ORDER by sort_order, permission_id;
    </select>
</mapper>